{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/small_projects/fpt-react/fpt/src/components/note.js\";\nimport React from 'react';\nimport { Button, Row, Container, Col, Form, Navbar, Table, NavbarBrand } from 'react-bootstrap';\n\nfunction Note() {\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setnewTask] = React.useState('');\n  const [updateTask, setupdateTask] = React.useState('');\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      db.collection(\"tasks\").onSnapshot(function (data) {\n        console.log(data);\n        setTasks(data.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        })));\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"tasks\").add({\n      name: newTask\n    });\n  };\n\n  function onDelete(id) {\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).delete();\n  }\n\n  const onUpdate = id => {\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).set({\n      name: updateTask\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Add or Edit note\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Add new note\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setnewTask(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: onCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Create Task\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    bodered: true,\n    hover: true,\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Task Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Delete Task\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Update Task\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, tasks.map(spell => React.createElement(\"tr\", {\n    key: spell.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, spell.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, spell.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \", React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => onDelete(spell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Delete Task\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \" \",\n    placeholder: spell.name,\n    onChange: e => setupdateTask(e.target.value),\n    placeholder: spell.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"text-white ml-4\",\n    variant: \"warning\",\n    onClick: () => onUpdate(spell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Update Task\"))))))))));\n}\n\nexport default Note;","map":{"version":3,"sources":["/Users/apple/Desktop/small_projects/fpt-react/fpt/src/components/note.js"],"names":["React","Button","Row","Container","Col","Form","Navbar","Table","NavbarBrand","Note","tasks","setTasks","useState","newTask","setnewTask","updateTask","setupdateTask","useEffect","fetchData","db","firebase","firestore","collection","onSnapshot","data","console","log","docs","map","doc","id","onCreate","add","name","onDelete","delete","onUpdate","set","e","target","value","spell"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Button, Row, Container, Col, Form, Navbar, Table, NavbarBrand } from 'react-bootstrap';\n\nfunction Note() {\n\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setnewTask] = React.useState('');\n  const [updateTask, setupdateTask] = React.useState('');\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n\n      const db = firebase.firestore();\n\n      db.collection(\"tasks\")\n        .onSnapshot(function (data) {\n          console.log(data)\n          setTasks(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n        });\n    };\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n\n    const db = firebase.firestore();\n    db.collection(\"tasks\").add({ name: newTask });\n  };\n\n  function onDelete(id) {\n\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).delete();\n  }\n\n  const onUpdate = (id) => {\n\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).set({ name: updateTask });\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          Add or Edit note\n        </Navbar.Brand>\n      </Navbar>\n\n      <br></br>\n      <Container>\n\n        <Row>\n          <Col>\n            <h2>Add new note</h2>\n            <Form>\n\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Control type=\"text\" value={newTask} onChange={e => setnewTask(e.target.value)} />\n              </Form.Group>\n              <Button variant=\"primary\" onClick={onCreate}>Create Task</Button>\n            </Form>\n\n          </Col>\n        </Row>\n\n        <br></br>\n\n        <Row>\n          <Col>\n            <Table striped bodered hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Task Name</th>\n                  <th>Delete Task</th>\n                  <th>Update Task</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tasks.map(spell => (\n                  <tr key={spell.id}>\n                    <td>{spell.id}</td>\n                    <td>{spell.name}</td>\n                    <td> <Button variant=\"danger\" onClick={() => onDelete(spell.id)}>Delete Task</Button></td>\n\n                    <td>\n                      <input type=\"text\" className=\" \" placeholder={spell.name} onChange={e => setupdateTask(e.target.value)} placeholder={spell.name}></input>\n\n                      <Button className=\"text-white ml-4\" variant=\"warning\" onClick={() => onUpdate(spell.id)}>Update Task</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}