{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/small_projects/fpt-react/fpt/src/components/note.js\";\nimport React from 'react';\nimport firebase from '../firebase';\nimport { Button, Row, Container, Col, Form, Navbar, Table, NavbarBrand, Modal } from 'react-bootstrap';\n\nfunction Note() {\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setnewTask] = React.useState('');\n  const [updateTask, setupdateTask] = React.useState('');\n  const [show, setShow] = React.useState(false); // Modal Switcher\n\n  const [modalData, buttonData] = React.useState('');\n  React.useEffect(() => {\n    true ? modalData : null;\n  });\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      db.collection(\"stocks\").onSnapshot(function (data) {\n        console.log(data.docs[0].data());\n        setTasks(data.docs.map(doc => ({ ...doc.data(),\n          id: doc.id\n        })));\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n    const db = firebase.firestore();\n    db.collection(\"tasks\").add({\n      name: newTask\n    });\n  };\n\n  function onDelete(id) {\n    // const db = firebase.firestore();\n    // db.collection('stocks').doc(id).delete();\n    console.log(id);\n  }\n\n  const onUpdate = id => {\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).set({\n      name: updateTask\n    });\n  }; // Modal\n\n\n  const handleShow = e => {\n    setShow(true);\n    console.log(e.target.id);\n    buttonData(e.target.id); // Requires another trigger to update value. but by the time new value gets in queue\n\n    console.log(modalData + 'hello');\n  };\n\n  const handleClose = () => setShow(false);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Add or Edit note\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Add new Stock\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Table, {\n    striped: true,\n    bodered: \"true\",\n    hover: true,\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Stock Symbol\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Stock Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"No.of Shares\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Buy Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Current Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Profit/Loss\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, tasks.map(spell => React.createElement(\"tr\", {\n    key: spell.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, spell.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, spell.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => onDelete(spell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, spell.id)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \" \",\n    placeholder: spell.name,\n    onChange: e => setupdateTask(e.target.value),\n    placeholder: spell.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"text-white ml-4\",\n    variant: \"warning\",\n    onClick: () => onUpdate(spell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Update Task\")))))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Table, {\n    hover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, tasks.map(stock => React.createElement(\"tr\", {\n    key: stock.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"warning\",\n    id: stock.id,\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, stock.symbol)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, stock.name))))))))), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Modal heading\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Hello\")), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Save Changes\"))));\n}\n\nexport default Note;","map":{"version":3,"sources":["/Users/apple/Desktop/small_projects/fpt-react/fpt/src/components/note.js"],"names":["React","firebase","Button","Row","Container","Col","Form","Navbar","Table","NavbarBrand","Modal","Note","tasks","setTasks","useState","newTask","setnewTask","updateTask","setupdateTask","show","setShow","modalData","buttonData","useEffect","fetchData","db","firestore","collection","onSnapshot","data","console","log","docs","map","doc","id","onCreate","add","name","onDelete","onUpdate","set","handleShow","e","target","handleClose","spell","value","stock","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport firebase from '../firebase';\n\nimport { Button, Row, Container, Col, Form, Navbar, Table, NavbarBrand, Modal } from 'react-bootstrap';\n\nfunction Note() {\n\n  const [tasks, setTasks] = React.useState([]);\n  const [newTask, setnewTask] = React.useState('');\n  const [updateTask, setupdateTask] = React.useState('');\n\n  const [show, setShow] = React.useState(false); // Modal Switcher\n  const [modalData, buttonData] = React.useState('');\n\n  React.useEffect(() => { \n    true ? modalData : null;\n  });\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n\n      const db = firebase.firestore();\n\n      db.collection(\"stocks\")\n        .onSnapshot(function (data) {\n          console.log(data.docs[0].data())\n          setTasks(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n        });\n    };\n    fetchData();\n  }, []);\n\n  const onCreate = () => {\n\n    const db = firebase.firestore();\n    db.collection(\"tasks\").add({ name: newTask });\n  };\n\n  function onDelete(id) {\n\n    // const db = firebase.firestore();\n    // db.collection('stocks').doc(id).delete();\n\n    console.log(id);\n  }\n\n  const onUpdate = (id) => {\n\n    const db = firebase.firestore();\n    db.collection('tasks').doc(id).set({ name: updateTask });\n  }\n\n  // Modal\n\n  const handleShow = (e) => {\n    setShow(true);\n    console.log(e.target.id);\n    \n    buttonData(e.target.id);\n\n    // Requires another trigger to update value. but by the time new value gets in queue\n    \n    console.log(modalData + 'hello');\n  }\n\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          Add or Edit note\n        </Navbar.Brand>\n      </Navbar>\n\n      <br></br>\n      <Container>\n\n        <Row>\n          <Col>\n            <h2>Add new Stock</h2>\n            {/* <Form>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Control type=\"text\" value={newTask} onChange={e => setnewTask(e.target.value)} />\n              </Form.Group>\n              <Button variant=\"primary\" onClick={onCreate}>Create Task</Button>\n            </Form> */}\n\n            <hr />\n\n            <Table striped bodered=\"true\" hover variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>Stock Symbol</th>\n                  <th>Stock Name</th>\n                  <th>No.of Shares</th>\n                  <th>Buy Price</th>\n                  <th>Current Price</th>\n                  <th>Profit/Loss</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tasks.map(spell => (\n                  <tr key={spell.id}>\n                    <td>{spell.id}</td>\n                    <td>{spell.name}</td>\n                    <td>\n                      <Button variant=\"danger\" onClick={() => onDelete(spell.id)}>{spell.id}</Button>\n                    </td>\n\n                    <td>\n                      <input type=\"text\" className=\" \" placeholder={spell.name} onChange={e => setupdateTask(e.target.value)} placeholder={spell.name}></input>\n\n                      <Button className=\"text-white ml-4\" variant=\"warning\" onClick={() => onUpdate(spell.id)}>Update Task</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n\n          </Col>\n        </Row>\n\n        <br></br>\n\n        <Row>\n          <Col md={6}>\n\n            <Table hover>\n              <tbody>\n                {tasks.map(stock => (\n                  <tr key={stock.id}>\n                    <td>\n                      <Button variant=\"warning\" id={stock.id} onClick={handleShow}>{stock.symbol}</Button>\n                    </td>\n                    <td>\n                      <p>{stock.name}</p>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Modal Start */}\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n                  <p>Hello</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Modal End */}\n    </div>\n  )\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}